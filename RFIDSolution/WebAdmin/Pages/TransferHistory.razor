<TableHeader>
    <HeaderContent>
        <button class="btn btn-light" @onclick="async () => { await loadData(); }"><span class="oi oi-reload mr-2 text-primary"></span>Refresh data</button>
    </HeaderContent>
    <FilterContent>
        <div class="row">
            <div class="col-md-4">
                <InputSearch TextChanged='async (text) => { keyword = text??""; await loadData(); }' PlaceHolder="Search SKU, EPC"></InputSearch>
            </div>
        </div>
    </FilterContent>
</TableHeader>

@if (loading)
{
    <Loading></Loading>
}
else
{
    <div class="m-2 bg-white">
        <div>
            <table class="table table-bordered table-hover">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>TRANSFER DATE</th>
                        <th>TRANSFER REASON</th>
                        <th>TRANSFER TO</th>
                        <th>TRANSFER BY</th>
                        <th>STATUS</th>
                        <th>RETURN DATE</th>
                        <th>RETURN BY</th>
                        <th>DOCUMENT NO</th>
                        <th>DOCUMENT DATE</th>
                    </tr>
                </thead>
                <tbody>
                    @if (transfers.Count > 0)
                    {
                        int count = 1;
                        @foreach (var item in transfers)
                        {
                            <SelectableRow @bind-Selected="item.showDetail" OnClick="async () => { await loadItemDetail(item); }">
                                <MyTd>@item.TRANSFER_ID</MyTd>
                                <MyTd>@item.TIME_START.ToVNString()</MyTd>
                                <MyTd>@item.TRANSFER_REASON</MyTd>
                                <MyTd>@item.TRANSFER_TO</MyTd>
                                <MyTd>@item.TRANSFER_BY</MyTd>
                                <MyTd>
                                    <TransferStatusBadge Status="item.TRANSFER_STATUS"></TransferStatusBadge>
                                </MyTd>
                                <MyTd>@item.TIME_END</MyTd>
                                <MyTd>@item.RETURN_BY</MyTd>
                                <MyTd>@item.REF_DOC_NO</MyTd>
                                <MyTd>@item.REF_DOC_DATE</MyTd>
                            </SelectableRow>
                            <TableRowDetail Show="item.showDetail">
                                <div class="card">
                                    <!--Hiển thị thông tin mượn trả và danh sách giầy đã mượn trả-->
                                    <div class="card-body">
                                        <div class="row">
                                            <!--Thông tin mượn trả-->
                                            <div class="col-md-4">
                                                <ListItem Title="Transfer reason" Bordered="false" LeftToRight="false">@item.TRANSFER_REASON</ListItem>
                                                <ListItem Title="Transfer date" Bordered="false" LeftToRight="false">@item.TIME_START.ToVNString()</ListItem>
                                                <ListItem Title="Time ago" Bordered="false" LeftToRight="false">@item.TIME_START.TimeAgo()</ListItem>
                                                <ListItem Title="Transfer to" Bordered="false" LeftToRight="false">@item.TRANSFER_TO</ListItem>
                                                <ListItem Title="Transfer by" Bordered="false" LeftToRight="false">@item.TRANSFER_BY</ListItem>
                                                <ListItem Title="Status" Bordered="false" LeftToRight="false">
                                                    <TransferStatusBadge Status="item.TRANSFER_STATUS">
                                                    </TransferStatusBadge>
                                                </ListItem>
                                                <ListItem Title="Document No" Bordered="false" LeftToRight="false">@item.REF_DOC_NO</ListItem>
                                                <ListItem Title="Document date" Bordered="false" LeftToRight="false">@item.REF_DOC_DATE</ListItem>
                                                <ListItem Title="Transfer note" Bordered="false" LeftToRight="false">@item.TRANSFER_NOTE</ListItem>

                                                @if (item.TRANSFER_STATUS == InoutStatus.Returned)
                                                {
                                                    <ListItem Title="Return date" Bordered="false" LeftToRight="false">@item.TIME_END.ToVNString()</ListItem>
                                                    <ListItem Title="Return by" Bordered="false" LeftToRight="false">@item.RETURN_BY</ListItem>
                                                    <ListItem Title="Total time" Bordered="false" LeftToRight="false">@item.totalTransferTime</ListItem>
                                                    <ListItem Title="Return note" Bordered="false" LeftToRight="false">@item.RETURN_NOTE</ListItem>
                                                }
                                            </div>

                                            <!--Thông tin giày đã mượn/trả-->
                                            <div class="col-md-8">
                                                <label>Transfered shoes </label>
                                                <table class="table table-bordered table-hover">
                                                    <thead>
                                                        <tr>
                                                            <th>SHOE ID</th>
                                                            <th>SKU</th>
                                                            <th>MODEL</th>
                                                            <th>TRANSFER NOTE</th>
                                                            <th>STATUS</th>
                                                            <th>RETURN TIME</th>
                                                            <th>RETURN BY</th>
                                                            <th>RETURN NOTE</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @if (item.Products.Count > 0)
                                                        {
                                                            int count = 1;
                                                            @foreach (var prod in item.Products)
                                                            {
                                                                <tr class="hand">
                                                                    <td>@prod.ProductId</td>
                                                                    <td>@prod.SKU</td>
                                                                    <td>@prod.ModelName</td>
                                                                    <td>@prod.TRANSFER_NOTE</td>
                                                                    <td>
                                                                        <TransferStatusBadge Status="prod.STATUS">
                                                                        </TransferStatusBadge>
                                                                    </td>
                                                                    <td>@prod.RETURN_TIME?.ToVNString()</td>
                                                                    <td>@prod.RETURN_BY</td>
                                                                    <td>@prod.RETURN_NOTE</td>
                                                                </tr>
                                                                count++;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <NoData></NoData>
                                                        }
                                                    </tbody>
                                                    <tfoot></tfoot>
                                                </table>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="card-header">
                                        <button class="btn btn-light" @onclick="() => printTransfer(item.TRANSFER_ID)"><span class="oi oi-print me-2"></span>PRINT</button>
                                    </div>
                                </div>
                            </TableRowDetail>
                            count++;
                        }
                    }
                    else
                    {
                        <NoData></NoData>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="1000">
                            <Pagination TableState="tableState" TotalPageDisplay="5" StateChanged="async () => await loadData()"></Pagination>
                        </td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
}

@attribute [Authorize]
@inject HttpClient _client
@inject DialogService _dialog
@page "/transferhistory"
@code {
    [CascadingParameter] public IModalService Modal { get; set; }

    private TableState tableState = new TableState();
    private bool loading = true;
    private bool addingItem = false;
    private string keyword = "";
    private string baseUrl = "ProductTransfers";

    private List<TransferInoutModel> transfers = new List<TransferInoutModel>();

    protected override async Task OnInitializedAsync()
    {
        MainLayout.Instance.PageTitle = "Transfer history";
        await loadData();
    }

    private async Task printTransfer(int transferId)
    {
        await _dialog.ShowPrintModal(transferId);
    }

    private async Task loadItemDetail(TransferInoutModel item)
    {
        //reply = await productService.GetAsync(filter);
        if (!item.showDetail) return;
        Console.WriteLine("loading detail");
        var rspns = await _client.GetFromJsonAsync<ResponseModel<TransferInoutModel>>($"{baseUrl}/{item.TRANSFER_ID}");
        if (rspns.IsSuccess)
        {
            item.Products = rspns.Result.Products;
            StateHasChanged();
        }
        else
        {
            await _dialog.ErrorAlert(rspns.Message);
        }
    }

    private async Task loadData()
    {
        loading = true;
        //reply = await productService.GetAsync(filter);
        var rspns = await _client.GetFromJsonAsync<ResponseModel<PaginationResponse<TransferInoutModel>>>($"{baseUrl}?keyword={keyword}&pageItem={tableState.PageItem}&pageIndex={tableState.PageIndex}");
        if (rspns.IsSuccess)
        {
            transfers = rspns.Result.Data;
            tableState.TotalRow = rspns.Result.TotalRow;
        }
        else
        {
            await _dialog.ErrorAlert(rspns.Message);
        }
        loading = false;
    }
}
