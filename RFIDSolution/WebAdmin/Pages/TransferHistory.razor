<TableHeader>
    <HeaderContent>
        <button class="btn btn-light" @onclick="async () => { await loadData(); }"><span class="oi oi-reload mr-2 text-primary"></span>Refresh data</button>
    </HeaderContent>
    <FilterContent>
        <div class="row">
            <div class="col-md-4">
                <InputSearch TextChanged='async (text) => { keyword = text??""; await loadData(); }' PlaceHolder="Search SKU, EPC"></InputSearch>
            </div>
        </div>
    </FilterContent>
</TableHeader>

@if (loading)
{
    <Loading></Loading>
}
else
{
    <div class="m-2 bg-white">
        <div>
            <table class="table table-bordered table-hover">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>TRANSFER DATE</th>
                        <th>TRANSFER REASON</th>
                        <th>TRANSFER TO</th>
                        <th>TRANSFER BY</th>
                        <th>STATUS</th>
                        <th>RETURN DATE</th>
                        <th>RETURN BY</th>
                        <th>DOCUMENT NO</th>
                        <th>DOCUMENT DATE</th>
                        <th>NOTE</th>
                    </tr>
                </thead>
                <tbody>
                    @if (transfers.Count > 0)
                    {
                        int count = 1;
                        @foreach (var item in transfers)
                        {
                            <tr>
                                <td>@item.TRANSFER_ID</td>
                                <td>@item.TIME_START.ToVNString()</td>
                                <td>@item.TRANSFER_REASON</td>
                                <td>@item.TRANSFER_TO</td>
                                <td>@item.TRANSFER_BY</td>
                                <td>
                                    <span class="@item.statusClass">
                                        @item.TRANSFER_STATUS.GetDescription()
                                    </span>
                                </td>
                                <td>@item.TIME_END</td>
                                <td>@item.RETURN_BY</td>
                                <td>@item.REF_DOC_NO</td>
                                <td>@item.REF_DOC_DATE</td>
                                <td>@item.NOTE</td>
                            </tr>
                            count++;
                        }
                    }
                    else
                    {
                        <NoData></NoData>
                    }
                </tbody>
                <tfoot></tfoot>
            </table>
        </div>
    </div>
}

@using static RFIDSolution.Shared.Protos.ShoeModelProto
@using Grpc.Core;

@inject HttpClient _client
@inject ShoeModelProtoClient modelClient
@inject DialogService _dialog
@page "/transferhistory"
@code {
    [CascadingParameter] public IModalService Modal { get; set; }

    private bool loading = true;
    private bool addingItem = false;
    private string keyword = "";
    private string baseUrl = "ProductTransfers";

    private List<TransferInoutModel> transfers = new List<TransferInoutModel>();

    protected override async Task OnInitializedAsync()
    {
        MainLayout.Instance.PageTitle = "Transfer history";
        await loadData();
    }

    private async Task loadData()
    {
        loading = true;
        //reply = await productService.GetAsync(filter);
        var rspns = await _client.GetFromJsonAsync<ResponseModel<PaginationResponse<TransferInoutModel>>>($"{baseUrl}?keyword={keyword}&pageItem={10}&pageIndex={0}");
        if (rspns.IsSucceed)
        {
            transfers = rspns.Result.Data;
        }
        else
        {
            await _dialog.ErrorAlert(rspns.Message);
        }
        loading = false;
    }
}
