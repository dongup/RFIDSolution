<div class="row" style="width: 600px">
    <div class="col-md-12">
        <div class="row">
                
        </div>
    </div>

    <div class="col-md-12 mt-2 d-flex">
        <div class="spacer"></div>
        <button @onclick="() => ModalInstance.CancelAsync()" class="btn btn-light me-2">CLOSE</button>
    </div>
</div>

@using Grpc.Core;

@using RFIDSolution.Shared.Models.Products

@inject DefineService shoeModelService
@inject HttpClient _httpClient
@inject DialogService _dialog
@code {
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }

    [Parameter]
    public int ProductId { get; set; }

    public ProductModel item { get; set; } = new ProductModel();

    protected override async Task OnInitializedAsync()
    {
        await loadProductInfo();
    }

    private async Task loadProductInfo()
    {
        var rspns = await _httpClient.GetFromJsonAsync<ResponseModel<ProductModel>>($"products/{item.ID}");
        if (rspns.IsSuccess)
        {
            item.TransferHistory = rspns.Result.TransferHistory;
            StateHasChanged();
            item = rspns.Result;
        }
        else
        {
            await _dialog.ErrorAlert(rspns.Message);
        }
    }

    async Task OK()
    {
        if (!await _dialog.Confirm($"Are you sure want to save changes?")) return;

        var httpReq = await _httpClient.PutAsJsonAsync<ProductModel>($"products/{item.ID}", item);
        var rspns = await httpReq.Content.ReadFromJsonAsync<ResponseModel<object>>();
        if (rspns.IsSuccess)
        {
            await _dialog.SuccessAlert($"Shoe updated");
            await ModalInstance.CloseAsync(ModalResult.Ok<bool>(true));
        }
        else
        {
            await _dialog.ErrorAlert(rspns.Message);
        }
    }
}